/// Represents individual todo items within the Todo List application. Each
/// record is tied to the user who owns it, and includes all necessary
/// business fields to support creation, editing, filtering, sorting,
/// completion state, and administrative moderation. Tracks all
/// workflow/audit fields required by business (timestamps, status,
/// ownership) and enables both end-user and admin scenarios as defined by
/// business rules. User ownership enforced by a foreign key to the already
/// existing 'todo_list_user' table. No soft-delete, all deletions are
/// permanent; no historical snapshot/version tables required for MVP.
///
/// @namespace Todos
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_list_todos {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Belonged user's {@link todo_list_user.id}. Establishes todo ownership and
  /// enforces per-user access control.
  todo_list_user_id String
  
  /// Title of the todo item. Required field, used for display and search.
  /// Maximum 255 characters, trimmed of leading/trailing whitespace.
  title String
  
  /// Optional details about the todo item. Maximum 2000 characters. Trimmed of
  /// whitespace, supports search and filtering.
  description String?
  
  /// Optional due date by which the todo should be completed. Must be today or
  /// a future date. Used for filtering overdue and upcoming todos.
  due_date DateTime?
  
  /// Completion status. True if todo is complete, false otherwise. Used for
  /// filtering and status toggling.
  is_completed Boolean
  
  /// Timestamp for when the todo was created. Set automatically at creation.
  /// Used for sorting and audit.
  created_at DateTime
  
  /// Timestamp of the last modification to the todo (edit, status change,
  /// etc). Set automatically by system.
  updated_at DateTime
  
  /// Timestamp marking completion of the todo. Null if incomplete; set to time
  /// when marked complete. Allows audit/history funding and business logic for
  /// reporting.
  completed_at DateTime?
  
  //----
  // RELATIONS
  //----
  user todo_list_user @relation(fields: [todo_list_user_id], references: [id], onDelete: Cascade)
  
  @@unique([todo_list_user_id, title, due_date])
  @@index([todo_list_user_id, created_at])
  @@index([due_date])
  @@index([is_completed])
}