{"files":[{"filename":"schema-01-actors.prisma","namespace":"Actors","models":[{"name":"todo_list_user","description":"Registered user account for the Todo List application. Represents an individual who can authenticate, own todos, and perform all standard user operations. This entity is the core principal for business workflow, privacy boundaries, and ownership tracking. Each record manages authentication (email, password hash) and account timestamps. Independent CRUD management is supported. Admin users are defined separately in {@link todo_list_admin}.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"User's unique email address for authentication and identity. Must be unique per user and used as primary login credential.","nullable":false},{"name":"password_hash","type":"string","description":"Secure hash of the user's authentication password for login. Never store plain text passwords; always hash before storage.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the user account was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the most recent update to the user account details.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"todo_list_admin","description":"Administrator account with system-wide privileges. Manages authentication for privileged access, granting ability to moderate, view, or delete any user's todos, and manage user accounts. Used exclusively for admin authentication and role isolation, ensuring compliance and separation of admin operations from standard users ({@link todo_list_user}). Independent CRUD management is supported. Audit trails and business constraints are enforced via separate logging and security infrastructure.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Admin's unique email address for authentication. Must be unique per admin and used as primary login credential for privileged access.","nullable":false},{"name":"password_hash","type":"string","description":"Secure hash of the admin's authentication password. All passwords must be hashed before storage for compliance and protection.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp marking account creation for this admin profile.","nullable":false},{"name":"updated_at","type":"datetime","description":"Most recent timestamp when the admin account was updated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-02-todos.prisma","namespace":"Todos","models":[{"name":"todo_list_todos","description":"Represents individual todo items within the Todo List application. Each record is tied to the user who owns it, and includes all necessary business fields to support creation, editing, filtering, sorting, completion state, and administrative moderation. Tracks all workflow/audit fields required by business (timestamps, status, ownership) and enables both end-user and admin scenarios as defined by business rules. User ownership enforced by a foreign key to the already existing 'todo_list_user' table. No soft-delete, all deletions are permanent; no historical snapshot/version tables required for MVP.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"todo_list_user_id","type":"uuid","description":"Belonged user's {@link todo_list_user.id}. Establishes todo ownership and enforces per-user access control.","relation":{"name":"user","targetModel":"todo_list_user","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title of the todo item. Required field, used for display and search. Maximum 255 characters, trimmed of leading/trailing whitespace.","nullable":false},{"name":"description","type":"string","description":"Optional details about the todo item. Maximum 2000 characters. Trimmed of whitespace, supports search and filtering.","nullable":true},{"name":"due_date","type":"datetime","description":"Optional due date by which the todo should be completed. Must be today or a future date. Used for filtering overdue and upcoming todos.","nullable":true},{"name":"is_completed","type":"boolean","description":"Completion status. True if todo is complete, false otherwise. Used for filtering and status toggling.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp for when the todo was created. Set automatically at creation. Used for sorting and audit.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the last modification to the todo (edit, status change, etc). Set automatically by system.","nullable":false},{"name":"completed_at","type":"datetime","description":"Timestamp marking completion of the todo. Null if incomplete; set to time when marked complete. Allows audit/history funding and business logic for reporting.","nullable":true}],"uniqueIndexes":[{"fieldNames":["todo_list_user_id","title","due_date"],"unique":true}],"plainIndexes":[{"fieldNames":["todo_list_user_id","created_at"]},{"fieldNames":["due_date"]},{"fieldNames":["is_completed"]}],"ginIndexes":[{"fieldName":"title"}]}]}]}